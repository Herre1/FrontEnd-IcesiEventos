{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1112388109\\\\Desktop\\\\Compunet Victor\\\\FrontEnd-IcesiEventos\\\\src\\\\components\\\\EventCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useNavigate } from 'react';\nimport estrella from '../assets/estrella.png';\nimport estrellaFill from '../assets/estrellaFill.png';\nimport '../styles/EventCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventCard = ({\n  id,\n  title,\n  date,\n  time,\n  type,\n  imageSrc\n}) => {\n  _s();\n  const [starImage, setStarImage] = useState(estrella);\n  const navigate = useNavigate();\n  const handleEnroll = () => {\n    setStarImage(prevSrc => prevSrc === estrella ? estrellaFill : estrella);\n  };\n  const [eventosConImagen, setEventosConImagen] = useState([]);\n  /*\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await ??;\r\n          const eventosConImagenTemp = await Promise.all(\r\n            response.map(async (evento) => {\r\n              const imagen = await getUnsplashImage(evento.titulo);\r\n              return { ...evento, imagen };\r\n            })\r\n          );\r\n          setEventosConImagen(eventosConImagenTemp);\r\n        } catch (error) {\r\n          setEventosConImagen([]);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, []);\r\n  */\n\n  const handleClick = () => {\n    navigate(`/event/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-card\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-ellipsis\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        loading: \"lazy\",\n        src: starImage,\n        className: \"event-title-image\",\n        alt: \"Estrella\",\n        onClick: handleEnroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: imageSrc,\n      className: \"event-image\",\n      alt: \"Evento reciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCard, \"kmJTaGhuYz13aDpArWnZzOrPWQ8=\", false, function () {\n  return [useNavigate];\n});\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["React","useState","useNavigate","estrella","estrellaFill","jsxDEV","_jsxDEV","EventCard","id","title","date","time","type","imageSrc","_s","starImage","setStarImage","navigate","handleEnroll","prevSrc","eventosConImagen","setEventosConImagen","handleClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/1112388109/Desktop/Compunet Victor/FrontEnd-IcesiEventos/src/components/EventCard.js"],"sourcesContent":["import React, { useState, useNavigate } from 'react';\r\nimport estrella from '../assets/estrella.png';\r\nimport estrellaFill from '../assets/estrellaFill.png';\r\nimport '../styles/EventCard.css';\r\n\r\nconst EventCard = ({id, title, date, time, type, imageSrc }) => {\r\n  const [starImage, setStarImage] = useState(estrella);\r\n  const navigate = useNavigate();\r\n  const handleEnroll = () => {\r\n    setStarImage(prevSrc => prevSrc === estrella ? estrellaFill : estrella);\r\n  };\r\n\r\n  const [eventosConImagen, setEventosConImagen] = useState([]);\r\n/*\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ??;\r\n        const eventosConImagenTemp = await Promise.all(\r\n          response.map(async (evento) => {\r\n            const imagen = await getUnsplashImage(evento.titulo);\r\n            return { ...evento, imagen };\r\n          })\r\n        );\r\n        setEventosConImagen(eventosConImagenTemp);\r\n      } catch (error) {\r\n        setEventosConImagen([]);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n*/\r\n\r\nconst handleClick = () => {\r\n  navigate(`/event/${id}`);\r\n};\r\n\r\n  return (\r\n    <div className=\"event-card\" onClick={handleClick}>\r\n      <div className=\"event-title\">\r\n        <h3 className=\"card-ellipsis\">{title}</h3>\r\n        <img\r\n          loading=\"lazy\"\r\n          src={starImage}\r\n          className=\"event-title-image\"\r\n          alt=\"Estrella\"\r\n          onClick={handleEnroll}\r\n        />\r\n      </div>\r\n      <img\r\n        loading=\"lazy\"\r\n        src={imageSrc}\r\n        className=\"event-image\"\r\n        alt=\"Evento reciente\"\r\n      />\r\n      <div className=\"event-details\">\r\n        <p>{type}</p>\r\n        <p>{date}</p>\r\n        <p>{time}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAC;EAACC,EAAE;EAAEC,KAAK;EAAEC,IAAI;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAACE,QAAQ,CAAC;EACpD,MAAMc,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,OAAO,IAAIA,OAAO,KAAKhB,QAAQ,GAAGC,YAAY,GAAGD,QAAQ,CAAC;EACzE,CAAC;EAED,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxBL,QAAQ,CAAE,UAAST,EAAG,EAAC,CAAC;EAC1B,CAAC;EAEC,oBACEF,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEF,WAAY;IAAAG,QAAA,gBAC/CnB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAE,QAAA,gBAC1BnB,OAAA;QAAIiB,SAAS,EAAC,eAAe;QAAAE,QAAA,EAAEhB;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1CvB,OAAA;QACEwB,OAAO,EAAC,MAAM;QACdC,GAAG,EAAEhB,SAAU;QACfQ,SAAS,EAAC,mBAAmB;QAC7BS,GAAG,EAAC,UAAU;QACdR,OAAO,EAAEN;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MACEwB,OAAO,EAAC,MAAM;MACdC,GAAG,EAAElB,QAAS;MACdU,SAAS,EAAC,aAAa;MACvBS,GAAG,EAAC;IAAiB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFvB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAE,QAAA,gBAC5BnB,OAAA;QAAAmB,QAAA,EAAIb;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbvB,OAAA;QAAAmB,QAAA,EAAIf;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbvB,OAAA;QAAAmB,QAAA,EAAId;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA1DIP,SAAS;EAAA,QAEIL,WAAW;AAAA;AAAA+B,EAAA,GAFxB1B,SAAS;AA4Df,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}