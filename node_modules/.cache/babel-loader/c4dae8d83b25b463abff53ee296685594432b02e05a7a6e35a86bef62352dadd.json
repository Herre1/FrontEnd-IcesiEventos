{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1112388109\\\\Desktop\\\\Compunet Victor\\\\FrontEnd-IcesiEventos\\\\src\\\\components\\\\EventCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport estrella from '../assets/estrella.png';\nimport { useNavigate } from 'react-router-dom';\nimport estrellaFill from '../assets/estrellaFill.png';\nimport '../styles/EventCard.css';\nimport axios from 'axios';\nimport getUnsplashImage from \"../services/UnSplash.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventCard = ({\n  id,\n  title,\n  date,\n  time,\n  type,\n  imageSrc\n}) => {\n  _s();\n  const [starImage, setStarImage] = useState(estrella);\n  const [eventImage, setEventImage] = useState(imageSrc);\n  const navigate = useNavigate();\n  const handleEnroll = () => {\n    setStarImage(prevSrc => prevSrc === estrella ? estrellaFill : estrella);\n  };\n  useEffect(() => {\n    const fetchImage = async () => {\n      try {\n        const image = await getUnsplashImage(title);\n        setEventImage(image);\n      } catch (error) {\n        console.error('Error fetching Unsplash image:', error);\n      }\n    };\n    fetchImage();\n  }, [title]);\n  const handleClick = () => {\n    navigate(`/event/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-card\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-ellipsis\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        loading: \"lazy\",\n        src: starImage,\n        className: \"event-title-image\",\n        alt: \"Estrella\",\n        onClick: handleEnroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: eventImage,\n      className: \"event-image\",\n      alt: \"Evento reciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCard, \"oGuuWZc6L7wFMa4eDz1S7ObAkKQ=\", false, function () {\n  return [useNavigate];\n});\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["React","useState","useEffect","estrella","useNavigate","estrellaFill","axios","getUnsplashImage","jsxDEV","_jsxDEV","EventCard","id","title","date","time","type","imageSrc","_s","starImage","setStarImage","eventImage","setEventImage","navigate","handleEnroll","prevSrc","fetchImage","image","error","console","handleClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/1112388109/Desktop/Compunet Victor/FrontEnd-IcesiEventos/src/components/EventCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport estrella from '../assets/estrella.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport estrellaFill from '../assets/estrellaFill.png';\r\nimport '../styles/EventCard.css';\r\nimport axios from 'axios';\r\nimport getUnsplashImage from \"../services/UnSplash.ts\";\r\n\r\nconst EventCard = ({id, title, date, time, type, imageSrc }) => {\r\n  \r\n  const [starImage, setStarImage] = useState(estrella);\r\n  const [eventImage, setEventImage] = useState(imageSrc);\r\n  const navigate = useNavigate();\r\n\r\n  const handleEnroll = () => {\r\n    setStarImage(prevSrc => prevSrc === estrella ? estrellaFill : estrella);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      try {\r\n        const image = await getUnsplashImage(title);\r\n        setEventImage(image);\r\n      } catch (error) {\r\n        console.error('Error fetching Unsplash image:', error);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, [title]);\r\n\r\n\r\nconst handleClick = () => {\r\n  navigate(`/event/${id}`);\r\n};\r\n\r\n  return (\r\n    <div className=\"event-card\" onClick={handleClick}>\r\n      <div className=\"event-title\">\r\n        <h3 className=\"card-ellipsis\">{title}</h3>\r\n        <img\r\n          loading=\"lazy\"\r\n          src={starImage}\r\n          className=\"event-title-image\"\r\n          alt=\"Estrella\"\r\n          onClick={handleEnroll}\r\n        />\r\n      </div>\r\n      <img\r\n        loading=\"lazy\"\r\n        src={eventImage}\r\n        className=\"event-image\"\r\n        alt=\"Evento reciente\"\r\n      />\r\n      <div className=\"event-details\">\r\n        <p>{type}</p>\r\n        <p>{date}</p>\r\n        <p>{time}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}